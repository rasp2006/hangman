#!!! Не используйте сдесь слово ("конец") потому-что оно останавливает код
words = ["собака","кошка","картошка","сахар","перец","ромашка","книга","ручка","чашка"]
import random #импортируем модуль рандома чтобы получить рандомное число
f = random.randint(0, (len(words)-1))#получаем рандомное число для рандомного слова
def hangman(word = words[f]): #основная функция значение которой можно не вводить тогда оно будет рандомным из списка или же ввести своё  
    wrong = 0 #ошибки
    stages =["", #стадии висельника   
             "______     ",
             "|          ",
             "|     |    ",
             "|     0    ",
             "|    /|\   ", 
             "|    / \   ",
             "|          ",
             ]
    rletters = list(word) #что осталось отгадать
    board = ["_"] * len(word) #переменная с пустыми местами для отгадки букв
    lose = False #переменная победы с изначальным значением False
    print("Добро пожаловать на казнь")#приветственная фраза
    while True:#главный цикл который работает пока его не остановят
        print("\n")#вывод пустой области
        msg = "Введите букву или напишите конец чтобы закончить игру: "#переменная содержащая сообщение для пользователя
        char = input(msg)#значение которое мы получили от пользователя
        if char == "конец":#если пользователь написал конец, то игра останавливается            
            print("Игра остановлена")#сообщение о том что игра остановлена
            break #прерывание цикла
        elif char in rletters:#провертка на то есть ли данная буква в оставшихся
            cind = rletters.index(char)#присваеваем переменной индекс буквы в списке с оставшимися буквами
            board[cind] = char#замена пустово места на отгаданную букву
            rletters[cind] = "$"#замена отгданной буквы в списке оставшихся букв,чтобы не было проблем с повторяющимися буквами
        else:
            wrong = wrong + 1 #увеличиваем количество ошибок
        print((" ".join(board)))#вывод строки с результатом угадывания,методом (join) добавляем пустые места между всеми символами
        e = wrong + 1#добавляем 1 для работы среза строки ведь его конец не учитывается
        print("\n".join(stages[0: e]))#вывод самого висельника так чтобы каждая часть списка была на отдельной строке и получился рисунок
        if "_" not in board or wrong == len(stages): #если в переменной (с пустыми местами для отгадки букв)board больше не осталось пустых мест то выполняем (if) + (если ошибок столько сколько частей висельника)
            if "_" not in board:# если в переменной с пустыми местами(board) больше нет пустых мест то выполнить победные действия
                print("Вы выйграли! Было загадано слово:{}.".format(word))#сообщение о победе с загаданным словом
                print(" ".join(board))#добавление пустого места
                break #заканчиваем игру
            else:# иначе (если пошло на условные инструкции и не было победы)    
                print("\n".join(stages[0: wrong]))#вывод висельника целиком
                print("Вы проиграли! Было загадано слово:{}.".format(word))#сообщение о поражении с загаданным словом
                break #заканчиваем игру


hangman() #не вызывайте функцию самостоятельно, а перезапустите весь код иначе будет 1 и тоже слово         
            
